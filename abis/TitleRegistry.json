{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "regionalAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "district",
          "type": "string"
        }
      ],
      "name": "AdminAlreadyRegisteredForDistrict",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "district",
          "type": "string"
        }
      ],
      "name": "MustBeRegionalAdminAndFromSameDistrict",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeUserWhoMadeTheInitialRequest",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotApprovedByOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceMustBeAboveZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price_sended",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price_calculated",
          "type": "uint256"
        }
      ],
      "name": "PriceNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "PropertyAlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "PropertyIsNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PropertyNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RejectRequestBeforeChangingAvailability",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PropertyBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "PropertyChangedAvailability",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PropertyListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TitleRegistry.ReqStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "PropertyStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "regionalAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "district",
          "type": "string"
        }
      ],
      "name": "RegionalAdminCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "TransactionCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TransferSuccess",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_regionalAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_district",
          "type": "string"
        }
      ],
      "name": "addRegionalAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "buyProperty",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "findId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "landInfoOwner",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum TitleRegistry.ReqStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "landInfoUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum TitleRegistry.ReqStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "makeAvailable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "makeUnavailable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        },
        {
          "internalType": "enum TitleRegistry.ReqStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "processRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_district",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_neighborhood",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_surveyNumber",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_ownerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_marketValue",
          "type": "uint256"
        }
      ],
      "name": "registerTitle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "surveyNumber",
          "type": "uint256"
        }
      ],
      "name": "requestToLandOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_surveyNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marketValue",
          "type": "uint256"
        }
      ],
      "name": "updateTitleRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewAssets",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "property",
          "type": "uint256"
        }
      ],
      "name": "viewRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2fad2c053addd965cbb4d5aa1f39fcfec5bf1c8ae571ea3fe2fc126c47a2c4ac",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1506112",
    "logsBloom": "0x
    "blockHash": "0xba360303060ba96fd104bee5b9700aae1cace638f14abb7830d76100cee4d99f",
    "transactionHash": "0x2fad2c053addd965cbb4d5aa1f39fcfec5bf1c8ae571ea3fe2fc126c47a2c4ac",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1506112",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ee127ca66700aa4a29ded883d3feb8d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"regionalAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"}],\"name\":\"AdminAlreadyRegisteredForDistrict\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"}],\"name\":\"MustBeRegionalAdminAndFromSameDistrict\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeUserWhoMadeTheInitialRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedByOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceMustBeAboveZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price_sended\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price_calculated\",\"type\":\"uint256\"}],\"name\":\"PriceNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"PropertyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"PropertyIsNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PropertyNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RejectRequestBeforeChangingAvailability\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PropertyBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"PropertyChangedAvailability\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PropertyListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TitleRegistry.ReqStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"PropertyStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"regionalAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"}],\"name\":\"RegionalAdminCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"TransactionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferSuccess\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_regionalAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_district\",\"type\":\"string\"}],\"name\":\"addRegionalAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"buyProperty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"findId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"landInfoOwner\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum TitleRegistry.ReqStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"landInfoUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum TitleRegistry.ReqStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"makeAvailable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"makeUnavailable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum TitleRegistry.ReqStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"processRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_district\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_neighborhood\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_surveyNumber\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketValue\",\"type\":\"uint256\"}],\"name\":\"registerTitle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyNumber\",\"type\":\"uint256\"}],\"name\":\"requestToLandOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_surveyNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketValue\",\"type\":\"uint256\"}],\"name\":\"updateTitleRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewAssets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"property\",\"type\":\"uint256\"}],\"name\":\"viewRequest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TitleRegistry.sol\":\"TitleRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/TitleRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract TitleRegistry is ReentrancyGuard {\\n    error PriceMustBeAboveZero();\\n    // error NotApprovedForSystem();\\n    error NotApprovedByOwner();\\n    error PropertyNotAvailable();\\n    error PropertyAlreadyRegistered(uint256 id);\\n    error NotOwner();\\n    error NotAdmin();\\n    // error NotListed(address titleAddress, uint256 tokenId);\\n    error MustBeUserWhoMadeTheInitialRequest();\\n    error RejectRequestBeforeChangingAvailability();\\n    error NoProceeds();\\n    error PropertyIsNotRegistered(uint256 id);\\n    error TransferFailed();\\n    error MustBeRegionalAdminAndFromSameDistrict(\\n        address owner,\\n        string district\\n    );\\n\\n    error AdminAlreadyRegisteredForDistrict(\\n        address regionalAdmin,\\n        string district\\n    );\\n    // error TransferFailed();\\n    error PriceNotMet(\\n        uint256 surveyNumber,\\n        uint256 price,\\n        uint256 price_sended,\\n        uint256 price_calculated\\n    );\\n\\n    event PropertyListed(\\n        address indexed seller,\\n        uint256 indexed surveyNumber,\\n        uint256 price\\n    );\\n\\n    event PropertyBought(\\n        address indexed buyer,\\n        uint256 indexed surveyNumber,\\n        uint256 price\\n    );\\n\\n    event PropertyStatusChanged(uint256 indexed surveyNumber, ReqStatus);\\n    event PropertyChangedAvailability(uint256 indexed surveyNumber);\\n    event TransactionCanceled(\\n        address indexed seller,\\n        uint256 indexed surveyNumber\\n    );\\n    event TransferSuccess();\\n\\n    event RegionalAdminCreated(address indexed regionalAdmin, string district);\\n\\n    // Estructura de un titulo de propiedad\\n    struct TitleDetails {\\n        string state;\\n        string district;\\n        string neighborhood;\\n        uint256 surveyNumber;\\n        address currentOwner;\\n        uint256 marketValue;\\n        bool isAvailable;\\n        address requester;\\n        ReqStatus requestStatus;\\n    }\\n\\n    receive() external payable {} // to support receiving ETH by default\\n\\n    fallback() external payable {}\\n\\n    // Estado de la solicitud de transferencia\\n    enum ReqStatus {\\n        DEFAULT,\\n        PENDING,\\n        REJECTED,\\n        APPROVED\\n    }\\n\\n    // Perfil de un usuario\\n    struct Profiles {\\n        uint256[] assetList;\\n    }\\n\\n    mapping(uint256 => TitleDetails) private land;\\n    address private admin;\\n    mapping(string => address) private regionalAdmin;\\n    mapping(address => Profiles) private profile;\\n    mapping(address => uint256) private s_proceeds;\\n\\n    constructor() {\\n        admin = msg.sender;\\n    }\\n\\n    modifier onlyAdmin() {\\n        if (msg.sender != admin) {\\n            revert NotAdmin();\\n        }\\n        _;\\n    }\\n\\n    function addRegionalAdmin(address _regionalAdmin, string memory _district)\\n        public\\n        onlyAdmin\\n    {\\n        if (regionalAdmin[_district] != address(0)) {\\n            revert AdminAlreadyRegisteredForDistrict(_regionalAdmin, _district);\\n        }\\n        regionalAdmin[_district] = _regionalAdmin;\\n        emit RegionalAdminCreated(_regionalAdmin, _district);\\n    }\\n\\n    function registerTitle(\\n        string memory _state,\\n        string memory _district,\\n        string memory _neighborhood,\\n        uint256 _surveyNumber,\\n        address payable _ownerAddress,\\n        uint256 _marketValue\\n    ) public returns (bool) {\\n        if (regionalAdmin[_district] != msg.sender) {\\n            revert MustBeRegionalAdminAndFromSameDistrict(\\n                msg.sender,\\n                _district\\n            );\\n        }\\n\\n        if (land[_surveyNumber].surveyNumber != 0) {\\n            revert PropertyAlreadyRegistered(_surveyNumber);\\n        }\\n\\n        if (_marketValue <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n\\n        land[_surveyNumber].state = _state;\\n        land[_surveyNumber].district = _district;\\n        land[_surveyNumber].neighborhood = _neighborhood;\\n        land[_surveyNumber].surveyNumber = _surveyNumber;\\n        land[_surveyNumber].currentOwner = _ownerAddress;\\n        land[_surveyNumber].marketValue = _marketValue;\\n        profile[_ownerAddress].assetList.push(_surveyNumber);\\n\\n        emit PropertyListed(\\n            land[_surveyNumber].currentOwner,\\n            _surveyNumber,\\n            land[_surveyNumber].marketValue\\n        );\\n        return true;\\n    }\\n\\n    function updateTitleRegistry(uint256 _surveyNumber, uint256 _marketValue)\\n        external\\n    {\\n        if (land[_surveyNumber].surveyNumber == 0) {\\n            revert PropertyIsNotRegistered(_surveyNumber);\\n        }\\n\\n        if (land[_surveyNumber].currentOwner != msg.sender) {\\n            revert NotOwner();\\n        }\\n\\n        land[_surveyNumber].marketValue = _marketValue;\\n        emit PropertyListed(\\n            land[_surveyNumber].currentOwner,\\n            _surveyNumber,\\n            land[_surveyNumber].marketValue\\n        );\\n    }\\n\\n    function landInfoOwner(uint256 surveyNumber)\\n        public\\n        view\\n        returns (\\n            string memory,\\n            string memory,\\n            string memory,\\n            uint256,\\n            bool,\\n            address,\\n            ReqStatus\\n        )\\n    {\\n        if (land[surveyNumber].surveyNumber == 0) {\\n            revert PropertyIsNotRegistered(surveyNumber);\\n        }\\n\\n        return (\\n            land[surveyNumber].state,\\n            land[surveyNumber].district,\\n            land[surveyNumber].neighborhood,\\n            land[surveyNumber].surveyNumber,\\n            land[surveyNumber].isAvailable,\\n            land[surveyNumber].requester,\\n            land[surveyNumber].requestStatus\\n        );\\n    }\\n\\n    function landInfoUser(uint256 surveyNumber)\\n        public\\n        view\\n        returns (\\n            address,\\n            uint256,\\n            bool,\\n            address,\\n            ReqStatus\\n        )\\n    {\\n        if (land[surveyNumber].surveyNumber == 0) {\\n            revert PropertyIsNotRegistered(surveyNumber);\\n        }\\n        return (\\n            land[surveyNumber].currentOwner,\\n            land[surveyNumber].marketValue,\\n            land[surveyNumber].isAvailable,\\n            land[surveyNumber].requester,\\n            land[surveyNumber].requestStatus\\n        );\\n    }\\n\\n    function requestToLandOwner(uint256 surveyNumber) public {\\n        if (!land[surveyNumber].isAvailable) {\\n            revert PropertyNotAvailable();\\n        }\\n        land[surveyNumber].requester = msg.sender;\\n        land[surveyNumber].isAvailable = false;\\n        land[surveyNumber].requestStatus = ReqStatus.PENDING;\\n        emit PropertyStatusChanged(surveyNumber, ReqStatus.PENDING);\\n    }\\n\\n    function viewAssets() external view returns (uint256[] memory) {\\n        return (profile[msg.sender].assetList);\\n    }\\n\\n    function viewRequest(uint256 property) public view returns (address) {\\n        return (land[property].requester);\\n    }\\n\\n    function processRequest(uint256 surveyNumber, ReqStatus status) public {\\n        if (land[surveyNumber].currentOwner != msg.sender) {\\n            revert NotOwner();\\n        }\\n\\n        land[surveyNumber].requestStatus = status;\\n        emit PropertyStatusChanged(surveyNumber, status);\\n        if (status == ReqStatus.REJECTED) {\\n            land[surveyNumber].requester = address(0);\\n            land[surveyNumber].requestStatus = ReqStatus.DEFAULT;\\n        }\\n    }\\n\\n    function makeAvailable(uint256 surveyNumber) public {\\n        if (land[surveyNumber].currentOwner != msg.sender) {\\n            revert NotOwner();\\n        }\\n        land[surveyNumber].isAvailable = true;\\n        emit PropertyChangedAvailability(surveyNumber);\\n    }\\n\\n    function makeUnavailable(uint256 surveyNumber) public {\\n        if (land[surveyNumber].currentOwner != msg.sender) {\\n            revert NotOwner();\\n        }\\n\\n        if (land[surveyNumber].requestStatus == ReqStatus.PENDING) {\\n            revert RejectRequestBeforeChangingAvailability();\\n        }\\n\\n        land[surveyNumber].isAvailable = false;\\n        emit PropertyChangedAvailability(surveyNumber);\\n    }\\n\\n    function buyProperty(uint256 surveyNumber) external payable nonReentrant {\\n        if (land[surveyNumber].requestStatus != ReqStatus.APPROVED) {\\n            revert NotApprovedByOwner();\\n        }\\n        if (\\n            msg.value <\\n            (land[surveyNumber].marketValue +\\n                ((land[surveyNumber].marketValue) / 10))\\n        ) {\\n            revert PriceNotMet(\\n                land[surveyNumber].surveyNumber,\\n                land[surveyNumber].marketValue,\\n                (land[surveyNumber].marketValue +\\n                    ((land[surveyNumber].marketValue) / 10)),\\n                msg.value\\n            );\\n        }\\n        // No se le env\\u00eda directamente el dinero al vendedor\\n        // https://github.com/fravoll/solidity-patterns/blob/master/docs/pull_over_push.md\\n\\n        // Enviar el dinero al usuario \\u274c\\n        // Hacer que tengan que retirar el dinero \\u2705\\n\\n        // address payable Owner = land[surveyNumber].currentOwner;\\n        // Owner.transfer(\\n        //     land[surveyNumber].marketValue\\n        // );\\n\\n        if (land[surveyNumber].requester != msg.sender) {\\n            revert MustBeUserWhoMadeTheInitialRequest();\\n        }\\n\\n        s_proceeds[land[surveyNumber].currentOwner] += msg.value;\\n\\n        removeOwnership(land[surveyNumber].currentOwner, surveyNumber);\\n        land[surveyNumber].currentOwner = msg.sender;\\n        land[surveyNumber].isAvailable = false;\\n        land[surveyNumber].requester = address(0);\\n        land[surveyNumber].requestStatus = ReqStatus.DEFAULT;\\n        profile[msg.sender].assetList.push(surveyNumber); //adds the property to the asset list of the new owner.\\n\\n        emit PropertyBought(\\n            msg.sender,\\n            land[surveyNumber].surveyNumber,\\n            land[surveyNumber].marketValue\\n        );\\n    }\\n\\n    function removeOwnership(address previousOwner, uint256 surveyNumber)\\n        private\\n    {\\n        uint256 index = findId(surveyNumber, previousOwner);\\n        profile[previousOwner].assetList[index] = profile[previousOwner]\\n            .assetList[profile[previousOwner].assetList.length - 1];\\n        profile[previousOwner].assetList.pop();\\n    }\\n\\n    function findId(uint256 surveyNumber, address user)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        uint256 i;\\n        for (i = 0; i < profile[user].assetList.length; i++) {\\n            if (profile[user].assetList[i] == surveyNumber) return i;\\n        }\\n        return i;\\n    }\\n\\n    function withDrawProceeds() external {\\n        uint256 proceeds = s_proceeds[msg.sender];\\n\\n        if (proceeds <= 0) {\\n            revert NoProceeds();\\n        }\\n\\n        s_proceeds[msg.sender] = 0;\\n        (bool success, ) = payable(msg.sender).call{value: proceeds}(\\\"\\\");\\n        if (!success) {\\n            revert TransferFailed();\\n        }\\n        emit TransferSuccess();\\n    }\\n\\n    function getProceeds(address seller) external view returns (uint256) {\\n        return s_proceeds[seller];\\n    }\\n}\\n\",\"keccak256\":\"0xdfdddd748bbf52a3b64ac74c0b6ada25a732334572fce39305f36c95d5de90a2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600055600280546001600160a01b03191633179055611990806100376000396000f3fe6080604052600436106100e05760003560e01c80636fa830a611610084578063b9fe075b11610056578063b9fe075b146102d5578063baa39e05146102f5578063c6890de514610315578063fdb10f501461032a57005b80636fa830a6146102515780637d1bfeb6146102645780639d01485f14610284578063a27664ee146102b557005b806330cfeda9116100bd57806330cfeda91461018a57806336eeba33146101ce57806355d61952146101fe578063577260311461023157005b80630d2d5dca146100e95780630f1aaa251461011457806326e852501461013457005b366100e757005b005b3480156100f557600080fd5b506100fe61034a565b60405161010b9190611722565b60405180910390f35b34801561012057600080fd5b506100e761012f3660046114c7565b6103ab565b34801561014057600080fd5b5061017261014f3660046115c6565b60009081526001602052604090206006015461010090046001600160a01b031690565b6040516001600160a01b03909116815260200161010b565b34801561019657600080fd5b506101c06101a53660046114aa565b6001600160a01b031660009081526005602052604090205490565b60405190815260200161010b565b3480156101da57600080fd5b506101ee6101e9366004611517565b6104ed565b604051901515815260200161010b565b34801561020a57600080fd5b5061021e6102193660046115c6565b610707565b60405161010b979695949392919061178e565b34801561023d57600080fd5b506100e761024c3660046115c6565b610951565b6100e761025f3660046115c6565b610a35565b34801561027057600080fd5b506100e761027f3660046115c6565b610cea565b34801561029057600080fd5b506102a461029f3660046115c6565b610dd2565b60405161010b9594939291906116ee565b3480156102c157600080fd5b506101c06102d03660046115df565b610e53565b3480156102e157600080fd5b506100e76102f0366004611638565b610ed7565b34801561030157600080fd5b506100e76103103660046115c6565b610fa0565b34801561032157600080fd5b506100e7611023565b34801561033657600080fd5b506100e761034536600461160f565b611128565b336000908152600460209081526040918290208054835181840281018401909452808452606093928301828280156103a157602002820191906000526020600020905b81548152602001906001019080831161038d575b5050505050905090565b6002546001600160a01b031633146103ef576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b031660038260405161040a91906116a8565b908152604051908190036020019020546001600160a01b0316146104675781816040517ff270872f00000000000000000000000000000000000000000000000000000000815260040161045e9291906116c4565b60405180910390fd5b8160038260405161047891906116a8565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19909116179055908316907f851ead5523afddf8136fe763caa85908ba6c402b7a3b9b1b37609f4fb6178b54906104e1908490611774565b60405180910390a25050565b6000336001600160a01b031660038760405161050991906116a8565b908152604051908190036020019020546001600160a01b03161461055d5733866040517fd4e69a8400000000000000000000000000000000000000000000000000000000815260040161045e9291906116c4565b600084815260016020526040902060030154156105a9576040517f3f4db3410000000000000000000000000000000000000000000000000000000081526004810185905260240161045e565b600082116105e3576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526001602090815260409091208851610602928a0190611384565b506000848152600160208181526040909220885161062893919092019190890190611384565b506000848152600160209081526040909120865161064e92600290920191880190611384565b506000848152600160208181526040808420600381018990556004808201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038b8116918217835560059094018a815590885291855283872080548088018255908852858820018b9055958a9052938352935492549051908152879392909216917ff5c0eb0f7d7b9aca7a6a0878bad634e068197a76962992ee3d0f0f34cbefd1ea910160405180910390a35060015b9695505050505050565b606080606060008060008060016000898152602001908152602001600020600301546000141561074d57604051630c41c7db60e41b81526004810189905260240161045e565b6000888152600160208190526040909120600381015460068201548254929384019260028501929160ff808216926001600160a01b0361010084041692600160a81b90049091169087906107a090611881565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90611881565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b5050505050965085805461082c90611881565b80601f016020809104026020016040519081016040528092919081815260200182805461085890611881565b80156108a55780601f1061087a576101008083540402835291602001916108a5565b820191906000526020600020905b81548152906001019060200180831161088857829003601f168201915b505050505095508480546108b890611881565b80601f01602080910402602001604051908101604052809291908181526020018280546108e490611881565b80156109315780601f1061090657610100808354040283529160200191610931565b820191906000526020600020905b81548152906001019060200180831161091457829003601f168201915b505050505094509650965096509650965096509650919395979092949650565b6000818152600160205260409020600401546001600160a01b0316331461098b576040516330cd747160e01b815260040160405180910390fd5b6001600082815260016020526040902060060154600160a81b900460ff1660038111156109ba576109ba6118ed565b14156109f2576040517f2d12bd7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020526040808220600601805460ff191690555182917f4439152051ea77f3d9c897ae0eed03d8937e7d3d959026f424c8c5f66a11557b91a250565b610a3d611244565b6003600082815260016020526040902060060154600160a81b900460ff166003811115610a6c57610a6c6118ed565b14610aa3576040517f95914a0900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020526040902060050154610ac190600a90611818565b600082815260016020526040902060050154610add9190611800565b341015610b6d5760008181526001602052604090206003810154600590910154610b08600a82611818565b600084815260016020526040902060050154610b249190611800565b6040517f86d4e3d500000000000000000000000000000000000000000000000000000000815260048101939093526024830191909152604482015234606482015260840161045e565b60008181526001602052604090206006015461010090046001600160a01b03163314610bc5576040517f0bc4dfdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600160209081526040808320600401546001600160a01b03168352600590915281208054349290610bfc908490611800565b9091555050600081815260016020526040902060040154610c26906001600160a01b0316826112b8565b6000818152600160208181526040808420600480820180543373ffffffffffffffffffffffffffffffffffffffff19909116811790915560068301805475ffffffffffffffffffffffffffffffffffffffffffff19169055808752908452828620805480870182559087528487200187905594869052928252600383015460059093015490519081529192917f1de8fe6bc4d377d8688f16ceab5a790bc0873ce6e6e39b682e29ce665e3a9d3d910160405180910390a3610ce76001600055565b50565b60008181526001602052604090206006015460ff16610d35576040517fda03c7e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600160208190526040918290206006018054600160a81b75ffffffffffffffffffffffffffffffffffffffffffff199091167fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff0033610100021617179055905182917fc9ad6f316a0c29919c9b20c406f1baca1b93c196df6515c9e236a803e8a50c1391610dc79190611766565b60405180910390a250565b6000818152600160205260408120600301548190819081908190610e0c57604051630c41c7db60e41b81526004810187905260240161045e565b50505060009283525050600160205260409020600481015460058201546006909201546001600160a01b039182169360ff8083169361010084041692600160a81b90041690565b6000805b6001600160a01b038316600090815260046020526040902054811015610ece576001600160a01b0383166000908152600460205260409020805485919083908110610ea457610ea4611919565b90600052602060002001541415610ebc579050610ed1565b80610ec6816118bc565b915050610e57565b90505b92915050565b600082815260016020526040902060030154610f0957604051630c41c7db60e41b81526004810183905260240161045e565b6000828152600160205260409020600401546001600160a01b03163314610f43576040516330cd747160e01b815260040160405180910390fd5b6000828152600160209081526040918290206005810184905560040154915183815284926001600160a01b0316917ff5c0eb0f7d7b9aca7a6a0878bad634e068197a76962992ee3d0f0f34cbefd1ea910160405180910390a35050565b6000818152600160205260409020600401546001600160a01b03163314610fda576040516330cd747160e01b815260040160405180910390fd5b6000818152600160208190526040808320600601805460ff19169092179091555182917f4439152051ea77f3d9c897ae0eed03d8937e7d3d959026f424c8c5f66a11557b91a250565b336000908152600560205260409020548061106a576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600560205260408082208290555190919083908381818185875af1925050503d80600081146110bb576040519150601f19603f3d011682016040523d82523d6000602084013e6110c0565b606091505b50509050806110fb576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f41bff10501107ea6d629b2f2320bcb7430794ea0b36ecc79be9f42b3b8f3d55890600090a15050565b6000828152600160205260409020600401546001600160a01b03163314611162576040516330cd747160e01b815260040160405180910390fd5b600082815260016020526040902060060180548291907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b8360038111156111b1576111b16118ed565b0217905550817fc9ad6f316a0c29919c9b20c406f1baca1b93c196df6515c9e236a803e8a50c13826040516111e69190611766565b60405180910390a26002816003811115611202576112026118ed565b141561124057600082815260016020526040902060060180547fffffffffffffffffffff000000000000000000000000000000000000000000ff1690555b5050565b600260005414156112b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161045e565b6002600055565b60006112c48284610e53565b6001600160a01b03841660009081526004602052604090208054919250906112ee9060019061183a565b815481106112fe576112fe611919565b60009182526020808320909101546001600160a01b03861683526004909152604090912080548390811061133457611334611919565b60009182526020808320909101929092556001600160a01b038516815260049091526040902080548061136957611369611903565b60019003818190600052602060002001600090559055505050565b82805461139090611881565b90600052602060002090601f0160209004810192826113b257600085556113f8565b82601f106113cb57805160ff19168380011785556113f8565b828001600101855582156113f8579182015b828111156113f85782518255916020019190600101906113dd565b50611404929150611408565b5090565b5b808211156114045760008155600101611409565b600082601f83011261142e57600080fd5b813567ffffffffffffffff808211156114495761144961192f565b604051601f8301601f19908116603f011681019082821181831017156114715761147161192f565b8160405283815286602085880101111561148a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156114bc57600080fd5b8135610ece81611945565b600080604083850312156114da57600080fd5b82356114e581611945565b9150602083013567ffffffffffffffff81111561150157600080fd5b61150d8582860161141d565b9150509250929050565b60008060008060008060c0878903121561153057600080fd5b863567ffffffffffffffff8082111561154857600080fd5b6115548a838b0161141d565b9750602089013591508082111561156a57600080fd5b6115768a838b0161141d565b9650604089013591508082111561158c57600080fd5b5061159989828a0161141d565b9450506060870135925060808701356115b181611945565b8092505060a087013590509295509295509295565b6000602082840312156115d857600080fd5b5035919050565b600080604083850312156115f257600080fd5b82359150602083013561160481611945565b809150509250929050565b6000806040838503121561162257600080fd5b8235915060208301356004811061160457600080fd5b6000806040838503121561164b57600080fd5b50508035926020909101359150565b6004811061167857634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452611694816020860160208601611851565b601f01601f19169290920160200192915050565b600082516116ba818460208701611851565b9190910192915050565b6001600160a01b03831681526040602082015260006116e6604083018461167c565b949350505050565b6001600160a01b0386811682526020820186905284151560408301528316606082015260a081016106fd608083018461165a565b6020808252825182820181905260009190848201906040850190845b8181101561175a5783518352928401929184019160010161173e565b50909695505050505050565b60208101610ed1828461165a565b602081526000611787602083018461167c565b9392505050565b60e0815260006117a160e083018a61167c565b82810360208401526117b3818a61167c565b905082810360408401526117c7818961167c565b91505085606083015284151560808301526001600160a01b03841660a08301526117f460c083018461165a565b98975050505050505050565b60008219821115611813576118136118d7565b500190565b60008261183557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561184c5761184c6118d7565b500390565b60005b8381101561186c578181015183820152602001611854565b8381111561187b576000848401525b50505050565b600181811c9082168061189557607f821691505b602082108114156118b657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118d0576118d06118d7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ce757600080fdfea2646970667358221220ca267736d09fefb183183e0891f684307e1f2b67532e783b20e253078f7ddc7364736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100e05760003560e01c80636fa830a611610084578063b9fe075b11610056578063b9fe075b146102d5578063baa39e05146102f5578063c6890de514610315578063fdb10f501461032a57005b80636fa830a6146102515780637d1bfeb6146102645780639d01485f14610284578063a27664ee146102b557005b806330cfeda9116100bd57806330cfeda91461018a57806336eeba33146101ce57806355d61952146101fe578063577260311461023157005b80630d2d5dca146100e95780630f1aaa251461011457806326e852501461013457005b366100e757005b005b3480156100f557600080fd5b506100fe61034a565b60405161010b9190611722565b60405180910390f35b34801561012057600080fd5b506100e761012f3660046114c7565b6103ab565b34801561014057600080fd5b5061017261014f3660046115c6565b60009081526001602052604090206006015461010090046001600160a01b031690565b6040516001600160a01b03909116815260200161010b565b34801561019657600080fd5b506101c06101a53660046114aa565b6001600160a01b031660009081526005602052604090205490565b60405190815260200161010b565b3480156101da57600080fd5b506101ee6101e9366004611517565b6104ed565b604051901515815260200161010b565b34801561020a57600080fd5b5061021e6102193660046115c6565b610707565b60405161010b979695949392919061178e565b34801561023d57600080fd5b506100e761024c3660046115c6565b610951565b6100e761025f3660046115c6565b610a35565b34801561027057600080fd5b506100e761027f3660046115c6565b610cea565b34801561029057600080fd5b506102a461029f3660046115c6565b610dd2565b60405161010b9594939291906116ee565b3480156102c157600080fd5b506101c06102d03660046115df565b610e53565b3480156102e157600080fd5b506100e76102f0366004611638565b610ed7565b34801561030157600080fd5b506100e76103103660046115c6565b610fa0565b34801561032157600080fd5b506100e7611023565b34801561033657600080fd5b506100e761034536600461160f565b611128565b336000908152600460209081526040918290208054835181840281018401909452808452606093928301828280156103a157602002820191906000526020600020905b81548152602001906001019080831161038d575b5050505050905090565b6002546001600160a01b031633146103ef576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b031660038260405161040a91906116a8565b908152604051908190036020019020546001600160a01b0316146104675781816040517ff270872f00000000000000000000000000000000000000000000000000000000815260040161045e9291906116c4565b60405180910390fd5b8160038260405161047891906116a8565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19909116179055908316907f851ead5523afddf8136fe763caa85908ba6c402b7a3b9b1b37609f4fb6178b54906104e1908490611774565b60405180910390a25050565b6000336001600160a01b031660038760405161050991906116a8565b908152604051908190036020019020546001600160a01b03161461055d5733866040517fd4e69a8400000000000000000000000000000000000000000000000000000000815260040161045e9291906116c4565b600084815260016020526040902060030154156105a9576040517f3f4db3410000000000000000000000000000000000000000000000000000000081526004810185905260240161045e565b600082116105e3576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526001602090815260409091208851610602928a0190611384565b506000848152600160208181526040909220885161062893919092019190890190611384565b506000848152600160209081526040909120865161064e92600290920191880190611384565b506000848152600160208181526040808420600381018990556004808201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038b8116918217835560059094018a815590885291855283872080548088018255908852858820018b9055958a9052938352935492549051908152879392909216917ff5c0eb0f7d7b9aca7a6a0878bad634e068197a76962992ee3d0f0f34cbefd1ea910160405180910390a35060015b9695505050505050565b606080606060008060008060016000898152602001908152602001600020600301546000141561074d57604051630c41c7db60e41b81526004810189905260240161045e565b6000888152600160208190526040909120600381015460068201548254929384019260028501929160ff808216926001600160a01b0361010084041692600160a81b90049091169087906107a090611881565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90611881565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b5050505050965085805461082c90611881565b80601f016020809104026020016040519081016040528092919081815260200182805461085890611881565b80156108a55780601f1061087a576101008083540402835291602001916108a5565b820191906000526020600020905b81548152906001019060200180831161088857829003601f168201915b505050505095508480546108b890611881565b80601f01602080910402602001604051908101604052809291908181526020018280546108e490611881565b80156109315780601f1061090657610100808354040283529160200191610931565b820191906000526020600020905b81548152906001019060200180831161091457829003601f168201915b505050505094509650965096509650965096509650919395979092949650565b6000818152600160205260409020600401546001600160a01b0316331461098b576040516330cd747160e01b815260040160405180910390fd5b6001600082815260016020526040902060060154600160a81b900460ff1660038111156109ba576109ba6118ed565b14156109f2576040517f2d12bd7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020526040808220600601805460ff191690555182917f4439152051ea77f3d9c897ae0eed03d8937e7d3d959026f424c8c5f66a11557b91a250565b610a3d611244565b6003600082815260016020526040902060060154600160a81b900460ff166003811115610a6c57610a6c6118ed565b14610aa3576040517f95914a0900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020526040902060050154610ac190600a90611818565b600082815260016020526040902060050154610add9190611800565b341015610b6d5760008181526001602052604090206003810154600590910154610b08600a82611818565b600084815260016020526040902060050154610b249190611800565b6040517f86d4e3d500000000000000000000000000000000000000000000000000000000815260048101939093526024830191909152604482015234606482015260840161045e565b60008181526001602052604090206006015461010090046001600160a01b03163314610bc5576040517f0bc4dfdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600160209081526040808320600401546001600160a01b03168352600590915281208054349290610bfc908490611800565b9091555050600081815260016020526040902060040154610c26906001600160a01b0316826112b8565b6000818152600160208181526040808420600480820180543373ffffffffffffffffffffffffffffffffffffffff19909116811790915560068301805475ffffffffffffffffffffffffffffffffffffffffffff19169055808752908452828620805480870182559087528487200187905594869052928252600383015460059093015490519081529192917f1de8fe6bc4d377d8688f16ceab5a790bc0873ce6e6e39b682e29ce665e3a9d3d910160405180910390a3610ce76001600055565b50565b60008181526001602052604090206006015460ff16610d35576040517fda03c7e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600160208190526040918290206006018054600160a81b75ffffffffffffffffffffffffffffffffffffffffffff199091167fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff0033610100021617179055905182917fc9ad6f316a0c29919c9b20c406f1baca1b93c196df6515c9e236a803e8a50c1391610dc79190611766565b60405180910390a250565b6000818152600160205260408120600301548190819081908190610e0c57604051630c41c7db60e41b81526004810187905260240161045e565b50505060009283525050600160205260409020600481015460058201546006909201546001600160a01b039182169360ff8083169361010084041692600160a81b90041690565b6000805b6001600160a01b038316600090815260046020526040902054811015610ece576001600160a01b0383166000908152600460205260409020805485919083908110610ea457610ea4611919565b90600052602060002001541415610ebc579050610ed1565b80610ec6816118bc565b915050610e57565b90505b92915050565b600082815260016020526040902060030154610f0957604051630c41c7db60e41b81526004810183905260240161045e565b6000828152600160205260409020600401546001600160a01b03163314610f43576040516330cd747160e01b815260040160405180910390fd5b6000828152600160209081526040918290206005810184905560040154915183815284926001600160a01b0316917ff5c0eb0f7d7b9aca7a6a0878bad634e068197a76962992ee3d0f0f34cbefd1ea910160405180910390a35050565b6000818152600160205260409020600401546001600160a01b03163314610fda576040516330cd747160e01b815260040160405180910390fd5b6000818152600160208190526040808320600601805460ff19169092179091555182917f4439152051ea77f3d9c897ae0eed03d8937e7d3d959026f424c8c5f66a11557b91a250565b336000908152600560205260409020548061106a576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600560205260408082208290555190919083908381818185875af1925050503d80600081146110bb576040519150601f19603f3d011682016040523d82523d6000602084013e6110c0565b606091505b50509050806110fb576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f41bff10501107ea6d629b2f2320bcb7430794ea0b36ecc79be9f42b3b8f3d55890600090a15050565b6000828152600160205260409020600401546001600160a01b03163314611162576040516330cd747160e01b815260040160405180910390fd5b600082815260016020526040902060060180548291907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b8360038111156111b1576111b16118ed565b0217905550817fc9ad6f316a0c29919c9b20c406f1baca1b93c196df6515c9e236a803e8a50c13826040516111e69190611766565b60405180910390a26002816003811115611202576112026118ed565b141561124057600082815260016020526040902060060180547fffffffffffffffffffff000000000000000000000000000000000000000000ff1690555b5050565b600260005414156112b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161045e565b6002600055565b60006112c48284610e53565b6001600160a01b03841660009081526004602052604090208054919250906112ee9060019061183a565b815481106112fe576112fe611919565b60009182526020808320909101546001600160a01b03861683526004909152604090912080548390811061133457611334611919565b60009182526020808320909101929092556001600160a01b038516815260049091526040902080548061136957611369611903565b60019003818190600052602060002001600090559055505050565b82805461139090611881565b90600052602060002090601f0160209004810192826113b257600085556113f8565b82601f106113cb57805160ff19168380011785556113f8565b828001600101855582156113f8579182015b828111156113f85782518255916020019190600101906113dd565b50611404929150611408565b5090565b5b808211156114045760008155600101611409565b600082601f83011261142e57600080fd5b813567ffffffffffffffff808211156114495761144961192f565b604051601f8301601f19908116603f011681019082821181831017156114715761147161192f565b8160405283815286602085880101111561148a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156114bc57600080fd5b8135610ece81611945565b600080604083850312156114da57600080fd5b82356114e581611945565b9150602083013567ffffffffffffffff81111561150157600080fd5b61150d8582860161141d565b9150509250929050565b60008060008060008060c0878903121561153057600080fd5b863567ffffffffffffffff8082111561154857600080fd5b6115548a838b0161141d565b9750602089013591508082111561156a57600080fd5b6115768a838b0161141d565b9650604089013591508082111561158c57600080fd5b5061159989828a0161141d565b9450506060870135925060808701356115b181611945565b8092505060a087013590509295509295509295565b6000602082840312156115d857600080fd5b5035919050565b600080604083850312156115f257600080fd5b82359150602083013561160481611945565b809150509250929050565b6000806040838503121561162257600080fd5b8235915060208301356004811061160457600080fd5b6000806040838503121561164b57600080fd5b50508035926020909101359150565b6004811061167857634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452611694816020860160208601611851565b601f01601f19169290920160200192915050565b600082516116ba818460208701611851565b9190910192915050565b6001600160a01b03831681526040602082015260006116e6604083018461167c565b949350505050565b6001600160a01b0386811682526020820186905284151560408301528316606082015260a081016106fd608083018461165a565b6020808252825182820181905260009190848201906040850190845b8181101561175a5783518352928401929184019160010161173e565b50909695505050505050565b60208101610ed1828461165a565b602081526000611787602083018461167c565b9392505050565b60e0815260006117a160e083018a61167c565b82810360208401526117b3818a61167c565b905082810360408401526117c7818961167c565b91505085606083015284151560808301526001600160a01b03841660a08301526117f460c083018461165a565b98975050505050505050565b60008219821115611813576118136118d7565b500190565b60008261183557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561184c5761184c6118d7565b500390565b60005b8381101561186c578181015183820152602001611854565b8381111561187b576000848401525b50505050565b600181811c9082168061189557607f821691505b602082108114156118b657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118d0576118d06118d7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ce757600080fdfea2646970667358221220ca267736d09fefb183183e0891f684307e1f2b67532e783b20e253078f7ddc7364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/TitleRegistry.sol:TitleRegistry",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 189,
        "contract": "contracts/TitleRegistry.sol:TitleRegistry",
        "label": "land",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(TitleDetails)167_storage)"
      },
      {
        "astId": 191,
        "contract": "contracts/TitleRegistry.sol:TitleRegistry",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/TitleRegistry.sol:TitleRegistry",
        "label": "regionalAdmin",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 200,
        "contract": "contracts/TitleRegistry.sol:TitleRegistry",
        "label": "profile",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Profiles)184_storage)"
      },
      {
        "astId": 204,
        "contract": "contracts/TitleRegistry.sol:TitleRegistry",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ReqStatus)180": {
        "encoding": "inplace",
        "label": "enum TitleRegistry.ReqStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Profiles)184_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct TitleRegistry.Profiles)",
        "numberOfBytes": "32",
        "value": "t_struct(Profiles)184_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(TitleDetails)167_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct TitleRegistry.TitleDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(TitleDetails)167_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Profiles)184_storage": {
        "encoding": "inplace",
        "label": "struct TitleRegistry.Profiles",
        "members": [
          {
            "astId": 183,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "assetList",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(TitleDetails)167_storage": {
        "encoding": "inplace",
        "label": "struct TitleRegistry.TitleDetails",
        "members": [
          {
            "astId": 149,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "state",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 151,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "district",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 153,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "neighborhood",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 155,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "surveyNumber",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "currentOwner",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 159,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "marketValue",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 161,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "isAvailable",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 163,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "requester",
            "offset": 1,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 166,
            "contract": "contracts/TitleRegistry.sol:TitleRegistry",
            "label": "requestStatus",
            "offset": 21,
            "slot": "6",
            "type": "t_enum(ReqStatus)180"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}